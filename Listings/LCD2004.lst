C51 COMPILER V9.60.0.0   LCD2004                                                           11/05/2022 15:17:17 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LCD2004
OBJECT MODULE PLACED IN .\Objects\LCD2004.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\8051_Lib\libraries-20221022T064321Z-001\libraries\LCD2004.c OMF2 OPTI
                    -MIZE(8,SPEED) BROWSE INCDIR(..\8051_Lib\libraries-20221022T064321Z-001\libraries) DEBUG PRINT(.\Listings\LCD2004.lst) TA
                    -BS(2) OBJECT(.\Objects\LCD2004.obj)

line level    source

   1          #include "LCD2004.h"
   2          
   3          
   4          void LCD_Init (void)    /* LCD Initialize function */
   5          {
   6   1        LCD_Port = 0x00;
   7   1        delayMs(20);    /* LCD Power ON Initialization time >15ms */
   8   1        LCD_Command (0x02); /* powerdown mode disable */
   9   1        LCD_Command (0x28); /* 0010.1000 Initialization of 20X4 LCD in 4bit mode */
  10   1        LCD_Command (0x0F); /* 0000.1100 Display ON Cursor OFF */
  11   1        //LCD_Command (0x06); /* Auto Increment cursor */
  12   1        LCD_Command (0x01); /* Clear display */
  13   1        LCD_Command (0x80); /* Cursor at home position */
  14   1      }
  15          
  16          void LCD_Command (char cmnd)  /* LCD20x4 command funtion */
  17          {
  18   1        LCD_Port =(LCD_Port & 0x0F) | (cmnd & 0xF0);/* Send upper nibble */
  19   1        rs=0;     /* Command reg. */
  20   1        rw=0;     /* Write operation */
  21   1        en=1; 
  22   1        delayMs(1);
  23   1        en=0;
  24   1        delayMs(2);
  25   1        
  26   1        LCD_Port = (LCD_Port & 0x0F) | (cmnd << 4);/* Send lower nibble */
  27   1        en=1;     /* Enable pulse */
  28   1        delayMs(1);
  29   1        en=0;
  30   1        delayMs(5);
  31   1      }
  32          
  33          void LCD_SetPosition(char row, char pos)
  34          {
  35   1        if (row == 0)
  36   1          LCD_Command((pos & 0x1F)+0x80);
  37   1        else if (row == 1)
  38   1          LCD_Command((pos & 0x1F)+0xC0);  //   16x2: 16 cot. 0-15  => 20x04. 0-19  . 1 1111
  39   1        else if (row == 2)
  40   1          LCD_Command((pos & 0x1F)+0x94);  //  1001.0100  | 0000.0110 = 1001.0110 =0x9A
  41   1        else if (row == 3)
  42   1          LCD_Command((pos & 0x1F)+0xD4);
  43   1      }
  44          
  45          void LCD_Char (char char_data)  /* LCD data write function */
  46          {
  47   1        LCD_Port =(LCD_Port & 0x0F) | (char_data & 0xF0);/* Send upper nibble */
  48   1        rs=1;     /* Data reg.*/
  49   1        rw=0;     /* Write operation*/
  50   1        en=1;
  51   1        delayMs(1);
  52   1        en=0;
  53   1        delayMs(2);
C51 COMPILER V9.60.0.0   LCD2004                                                           11/05/2022 15:17:17 PAGE 2   

  54   1      
  55   1        LCD_Port = (LCD_Port & 0x0F) | (char_data << 4);/* Send lower nibble */
  56   1        en=1;     /* Enable pulse */
  57   1        delayMs(1);
  58   1        en=0;
  59   1        delayMs(5);
  60   1      
  61   1      }
  62          
  63          void LCD_String (char *str) /* Send string to LCD function */
  64          {
  65   1        int i;
  66   1        for(i=0;str[i]!=0;i++)  /* Send each char of string till the NULL */
  67   1        {
  68   2          LCD_Char (str[i]);  /* Call LCD data write */
  69   2        }
  70   1      }
  71          
  72          void LCD_String_xy (unsigned char row, unsigned char pos, char *str)  /* Send string to LCD function */
  73          {
  74   1        if (row == 0)
  75   1          LCD_Command((pos & 0x1F)+0x80);
  76   1        else if (row == 1)
  77   1          LCD_Command((pos & 0x1F)+0xC0);  //   16x2: 16 cot. 0-15  => 20x04. 0-19  . 1 1111
  78   1        else if (row == 2)
  79   1          LCD_Command((pos & 0x1F)+0x94);  //  1001.0100  | 0000.0110 = 1001.0110 =0x9A
  80   1        else if (row == 3)
  81   1          LCD_Command((pos & 0x1F)+0xD4);
  82   1        LCD_String(str);    /* Call LCD string function */
  83   1      }
  84          
  85          void LCD_Custom_Char (unsigned char loc, unsigned char *msg)
  86          {
  87   1        unsigned char i;
  88   1        if(loc<8)
  89   1        {
  90   2        /* Command 0x40 and onwards forces the device to point CGRAM address */
  91   2        LCD_Command (0x40 + (loc*8));
  92   2        for(i=0;i<8;i++)  /* Write 8 byte for generation of 1 character */
  93   2          LCD_Char(msg[i]);      
  94   2          }   
  95   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    440    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      18
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
